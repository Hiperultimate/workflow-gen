/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WorkflowsRouteImport } from './routes/workflows'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as CredentialsRouteImport } from './routes/credentials'
import { Route as IndexRouteImport } from './routes/index'
import { Route as WorkflowDetailsIdRouteImport } from './routes/workflowDetails/$id'

const WorkflowsRoute = WorkflowsRouteImport.update({
  id: '/workflows',
  path: '/workflows',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const CredentialsRoute = CredentialsRouteImport.update({
  id: '/credentials',
  path: '/credentials',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const WorkflowDetailsIdRoute = WorkflowDetailsIdRouteImport.update({
  id: '/workflowDetails/$id',
  path: '/workflowDetails/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/credentials': typeof CredentialsRoute
  '/signup': typeof SignupRoute
  '/workflows': typeof WorkflowsRoute
  '/workflowDetails/$id': typeof WorkflowDetailsIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/credentials': typeof CredentialsRoute
  '/signup': typeof SignupRoute
  '/workflows': typeof WorkflowsRoute
  '/workflowDetails/$id': typeof WorkflowDetailsIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/credentials': typeof CredentialsRoute
  '/signup': typeof SignupRoute
  '/workflows': typeof WorkflowsRoute
  '/workflowDetails/$id': typeof WorkflowDetailsIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/credentials'
    | '/signup'
    | '/workflows'
    | '/workflowDetails/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/credentials' | '/signup' | '/workflows' | '/workflowDetails/$id'
  id:
    | '__root__'
    | '/'
    | '/credentials'
    | '/signup'
    | '/workflows'
    | '/workflowDetails/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CredentialsRoute: typeof CredentialsRoute
  SignupRoute: typeof SignupRoute
  WorkflowsRoute: typeof WorkflowsRoute
  WorkflowDetailsIdRoute: typeof WorkflowDetailsIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/workflows': {
      id: '/workflows'
      path: '/workflows'
      fullPath: '/workflows'
      preLoaderRoute: typeof WorkflowsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/credentials': {
      id: '/credentials'
      path: '/credentials'
      fullPath: '/credentials'
      preLoaderRoute: typeof CredentialsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workflowDetails/$id': {
      id: '/workflowDetails/$id'
      path: '/workflowDetails/$id'
      fullPath: '/workflowDetails/$id'
      preLoaderRoute: typeof WorkflowDetailsIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CredentialsRoute: CredentialsRoute,
  SignupRoute: SignupRoute,
  WorkflowsRoute: WorkflowsRoute,
  WorkflowDetailsIdRoute: WorkflowDetailsIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
